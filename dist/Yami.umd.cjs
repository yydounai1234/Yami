(function(c,f){typeof exports=="object"&&typeof module<"u"?f(exports):typeof define=="function"&&define.amd?define(["exports"],f):(c=typeof globalThis<"u"?globalThis:c||self,f(c.Yami={}))})(this,function(c){"use strict";var K=Object.defineProperty;var Q=(c,f,l)=>f in c?K(c,f,{enumerable:!0,configurable:!0,writable:!0,value:l}):c[f]=l;var o=(c,f,l)=>(Q(c,typeof f!="symbol"?f+"":f,l),l);class f{constructor(){o(this,"_rate",1);o(this,"slopeCount",0);o(this,"prevSampleL",0);o(this,"prevSampleR",0);this.reset()}reset(){this.slopeCount=0,this.prevSampleL=0,this.prevSampleR=0}set rate(t){this._rate=t}get rate(){return this._rate}process(t){const e=t.length/2,s=t,i=new Float32Array(~~(t.length/this.rate));let n=0,r=0;for(;this.slopeCount<1;)i[2*r]=(1-this.slopeCount)*this.prevSampleL+this.slopeCount*s[0],i[2*r+1]=(1-this.slopeCount)*this.prevSampleR+this.slopeCount*s[1],r=r+1,this.slopeCount+=this.rate;if(this.slopeCount-=1,e!==1){t:for(;;){for(;this.slopeCount>1;)if(this.slopeCount-=1,n=n+1,n>=e-1)break t;const h=2*n;i[2*r]=(1-this.slopeCount)*s[h]+this.slopeCount*s[h+2],i[2*r+1]=(1-this.slopeCount)*s[h+1]+this.slopeCount*s[h+3],r=r+1,this.slopeCount+=this.rate}}return this.prevSampleL=s[2*e-2],this.prevSampleR=s[2*e-1],i}}const l=(a,t)=>(a>t?a-t:t-a)>1e-10,B=(a,t,e)=>a<t?t:a>e?e:a;class p{constructor(){o(this,"_vector",new Float32Array);o(this,"_position",0);o(this,"_frameCount",0)}get vector(){return this._vector}get position(){return this._position}get startIndex(){return this._position*2}get frameCount(){return this._frameCount}get endIndex(){return(this._position+this._frameCount)*2}clear(){this.receive(this._frameCount),this.rewind()}put(t){this._frameCount+=t}putSamples(t,e,s){e=e||0;const i=e*2;s>=0||(s=(t.length-i)/2);const n=s*2;this.ensureCapacity(s+this._frameCount);const r=this.endIndex;this.vector.set(t.subarray(i,i+n),r),this._frameCount+=s}putBuffer(t,e,s=0){e=e||0,s>=0||(s=t.frameCount-e),this.putSamples(t.vector,t.position+e,s)}receive(t){(!(t>=0)||t>this._frameCount)&&(t=this.frameCount),this._frameCount-=t,this._position+=t}receiveSamples(t,e=0){const s=e*2,i=this.startIndex;t.set(this._vector.subarray(i,i+s)),this.receive(e)}ensureCapacity(t=0){const e=~~(t*2);if(this._vector.length<e){const s=new Float32Array(e);s.set(this._vector.subarray(this.startIndex,this.endIndex)),this._vector=s,this._position=0}else this.rewind()}ensureAdditionalCapacity(t=0){this.ensureCapacity(this._frameCount+t)}rewind(){this._position>0&&(this._vector.set(this._vector.subarray(this.startIndex,this.endIndex)),this._position=0)}}const N=0,A=0,L=8,d=.5,w=2,C=125,O=50,k=(O-C)/(w-d),D=C-k*d,T=25,M=15,R=(M-T)/(w-d),P=T-R*d,y=[[124,186,248,310,372,434,496,558,620,682,744,806,868,930,992,1054,1116,1178,1240,1302,1364,1426,1488,0],[-100,-75,-50,-25,25,50,75,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-20,-15,-10,-5,5,10,15,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-4,-3,-2,-1,1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],I=16384;class b{constructor(){o(this,"_tempo",1);o(this,"autoSeqSetting",!0);o(this,"autoSeekSetting",!0);o(this,"overlapLength",0);o(this,"midBuffer",new Float32Array);o(this,"refMidBuffer",new Float32Array);o(this,"sampleRate",44100);o(this,"overlapMs",L);o(this,"sequenceMs",N);o(this,"seekWindowMs",A);o(this,"seekWindowLength",0);o(this,"seekLength",0);o(this,"sampleReq",0);o(this,"nominalSkip",0);o(this,"skipFract",0);o(this,"inputBuffer",new p);o(this,"outputBuffer",new p);this.setParameters(44100,N,A,L)}setParameters(t,e,s,i){t>0&&(this.sampleRate=t),i>0&&(this.overlapMs=i),e>0?(this.sequenceMs=e,this.autoSeqSetting=!1):this.autoSeqSetting=!0,s>0?(this.seekWindowMs=s,this.autoSeekSetting=!1):this.autoSeekSetting=!0,this.calculateSequenceParameters(),this.calculateOverlapLength(this.overlapMs),this.tempo=this._tempo}calculateSequenceParameters(){if(this.autoSeqSetting){let t=D+k*this._tempo;t=B(t,O,C),this.sequenceMs=Math.floor(t+.5)}if(this.autoSeekSetting){let t=P+R*this._tempo;t=B(t,M,T),this.seekWindowMs=Math.floor(t+.5)}this.seekWindowLength=Math.floor(this.sampleRate*this.sequenceMs/1e3),this.seekLength=Math.floor(this.sampleRate*this.seekWindowMs/1e3)}calculateOverlapLength(t=0){let e=this.sampleRate*t/1e3;e=e<16?16:e,e-=e%8,this.overlapLength=e,this.refMidBuffer=new Float32Array(this.overlapLength*2),this.midBuffer=new Float32Array(this.overlapLength*2)}set tempo(t){this._tempo=t,this.calculateSequenceParameters(),this.nominalSkip=this._tempo*(this.seekWindowLength-this.overlapLength);let e=Math.floor(this.nominalSkip+.5);this.sampleReq=Math.max(e+this.overlapLength,this.seekWindowLength)+this.seekLength}get tempo(){return this._tempo}seekBestOverlapPosition(){this.preCalculateCorrelationReferenceStereo();let t=Number.MIN_VALUE,e=0,s=0,i=0;for(let n=0;n<4;n=n+1){let r=0;for(;y[n][r]&&(i=s+y[n][r],!(i>=this.seekLength));){let h=this.calculateCrossCorrelationStereo(2*i,this.refMidBuffer);h>t&&(t=h,e=i),r=r+1}s=e}return e}preCalculateCorrelationReferenceStereo(){for(let t=0;t<this.overlapLength;t=t+1){let e=t*(this.overlapLength-t),s=t*2;this.refMidBuffer[s]=this.midBuffer[s]*e,this.refMidBuffer[s+1]=this.midBuffer[s+1]*e}}calculateCrossCorrelationStereo(t,e){const s=this.inputBuffer.vector;t+=this.inputBuffer.startIndex;let i=0;const n=2*this.overlapLength;for(let r=2;r<n;r=r+2){let h=r+t;i+=s[h]*e[r]+s[h+1]*e[r+1]}return i}overlap(t){let e=2*t;const s=this.inputBuffer.vector;e+=this.inputBuffer.startIndex;const i=this.outputBuffer.vector,n=this.outputBuffer.endIndex,r=1/this.overlapLength;for(let h=0;h<this.overlapLength;h=h+1){let v=(this.overlapLength-h)*r,_=h*r,u=2*h,U=u+e,x=u+n;i[x+0]=s[U+0]*_+this.midBuffer[u+0]*v,i[x+1]=s[U+1]*_+this.midBuffer[u+1]*v}}process(t){for(this.outputBuffer=new p,this.inputBuffer.putSamples(t,0,-1);this.inputBuffer.frameCount>=this.sampleReq;){const e=this.seekBestOverlapPosition();this.outputBuffer.ensureAdditionalCapacity(this.overlapLength),this.overlap(Math.floor(e)),this.outputBuffer.put(this.overlapLength);let s=this.seekWindowLength-2*this.overlapLength;s>0&&this.outputBuffer.putBuffer(this.inputBuffer,e+this.overlapLength,s);const i=this.inputBuffer.startIndex+2*(e+this.seekWindowLength-this.overlapLength);this.midBuffer.set(this.inputBuffer.vector.subarray(i,i+2*this.overlapLength)),this.skipFract+=this.nominalSkip;const n=~~this.skipFract;this.skipFract-=n,this.inputBuffer.receive(n)}return this.outputBuffer.vector}}class F{constructor(){o(this,"_rate",0);o(this,"_tempo",0);o(this,"virtualPitch",1);o(this,"virtualRate",1);o(this,"virtualTempo",1);o(this,"transposer",new f);o(this,"stretch",new b);this.calculateEffectiveRateAndTempo()}get rate(){return this._rate}set rate(t){this.virtualRate=t,this.calculateEffectiveRateAndTempo()}set rateChange(t){this._rate=1+.01*t}get tempo(){return this._tempo}set tempo(t){this.virtualTempo=t,this.calculateEffectiveRateAndTempo()}set tempoChange(t){this.tempo=1+.01*t}set pitch(t){this.virtualPitch=t,this.calculateEffectiveRateAndTempo()}set pitchOctaves(t){this.pitch=Math.exp(.69314718056*t),this.calculateEffectiveRateAndTempo()}set pitchSemitones(t){this.pitchOctaves=t/12}calculateEffectiveRateAndTempo(){const t=this._tempo,e=this._rate;this._tempo=this.virtualTempo/this.virtualPitch,this._rate=this.virtualRate*this.virtualPitch,l(this._tempo,t)&&(this.stretch.tempo=this._tempo),l(this._rate,e)&&(this.transposer.rate=this._rate)}process(t){if(this.rate>1){const e=this.stretch.process(t);return this.transposer.process(e)}else{const e=this.transposer.process(t);return this.stretch.process(e)}}}var m=(a=>(a.URL="URL",a.BUFFER="BUFFER",a.MICROPHONE="MICROPHONE",a))(m||{});const W=I,S=a=>a instanceof AudioBufferSourceNode,E=a=>a instanceof AudioBuffer;class g{constructor(t,e,s){o(this,"sourceDuration",{startTime:0,pauseTime:0,lastPauseTime:0,offsetTime:0});o(this,"bufferSize",W);o(this,"sourceNode");o(this,"scriptNode");o(this,"soundTouch",new F);o(this,"processBuffer",new p);o(this,"gainNode");this.source=t,this.audioContext=e,this.type=s,this.init()}init(){E(this.source)?(this.sourceNode=this.audioContext.createBufferSource(),this.sourceNode.buffer=this.source,this.sourceNode.addEventListener("ended",()=>{this.release()})):this.sourceNode=this.audioContext.createMediaStreamSource(this.source),this.scriptNode=this.audioContext.createScriptProcessor(this.bufferSize,2,2),this.sourceNode.connect(this.scriptNode),this.gainNode=this.audioContext.createGain(),this.scriptNode.connect(this.gainNode),this.gainNode.connect(this.audioContext.destination)}get pitch(){return this.soundTouch.pitch}set pitch(t){this.soundTouch.pitch=t}get volume(){return this.gainNode?this.gainNode.gain.value:-1}set volume(t){this.gainNode&&(this.gainNode.gain.value=t)}get duration(){return E(this.source)?this.source.duration:-1}get currentTime(){let t=this.audioContext.currentTime;return this.sourceDuration.lastPauseTime&&(t=this.sourceDuration.lastPauseTime),this.sourceDuration.offsetTime+t-this.sourceDuration.startTime-this.sourceDuration.pauseTime}async play(t=0){let e=!1;this.scriptNode&&(this.scriptNode.onaudioprocess=async s=>{const i=s.outputBuffer,n=s.inputBuffer,r=new Float32Array(this.bufferSize*2),h=n.getChannelData(0),v=n.numberOfChannels>1?n.getChannelData(1):n.getChannelData(0);for(let u=0;u<r.length;u++)r[u*2]=h[u],r[u*2+1]=v[u];const _=this.soundTouch.process(r);if(this.processBuffer.putSamples(_,0,-1),e){this.processBuffer.receiveSamples(r,this.bufferSize);for(let u=0;u<r.length;u++)i.getChannelData(0)[u]=r[u*2],i.getChannelData(1)[u]=r[u*2+1]}else this.processBuffer.frameCount>=this.bufferSize*2&&(e=!0)}),this.sourceNode&&S(this.sourceNode)&&(this.sourceDuration.startTime=this.audioContext.currentTime,this.sourceDuration.offsetTime=t,this.sourceNode.start(0,t))}resume(){this.sourceNode&&S(this.sourceNode)&&(this.sourceNode.playbackRate.value=1,this.sourceDuration.pauseTime+=this.audioContext.currentTime-this.sourceDuration.lastPauseTime,this.sourceDuration.lastPauseTime=0)}pause(){this.sourceNode&&S(this.sourceNode)&&(this.sourceNode.playbackRate.value=Number.MIN_VALUE,this.sourceDuration.lastPauseTime||(this.sourceDuration.lastPauseTime=this.audioContext.currentTime))}seek(t){this.release(),this.init(),this.play(t)}process(){if(E(this.source)){const t=new Float32Array(this.source.length*2),e=this.source.getChannelData(0),s=this.source.numberOfChannels>1?this.source.getChannelData(1):this.source.getChannelData(0);for(let i=0;i<t.length;i++)t[i*2]=e[i],t[i*2+1]=s[i];return this.soundTouch.process(t)}else return new Float32Array}release(){this.sourceNode&&(this.gainNode&&this.gainNode.disconnect(),this.sourceNode.disconnect(),this.scriptNode&&this.scriptNode.disconnect(),S(this.sourceNode)?(this.resetSourceDuration(),this.sourceNode.onended=null):this.sourceNode.mediaStream.getTracks().forEach(t=>{t.stop()}))}resetSourceDuration(){this.processBuffer=new p,this.sourceDuration={offsetTime:0,startTime:0,lastPauseTime:0,pauseTime:0}}}class q{async createURLTrack(t){return new Promise(async e=>{const s=new AudioContext,n=await(await fetch(t)).arrayBuffer();s.decodeAudioData(n,async r=>{const h=new g(r,s,m.URL);e(h)})})}async createBufferTrack(t){return new Promise(async e=>{const s=new AudioContext;s.decodeAudioData(t,async i=>{const n=new g(i,s,m.BUFFER);e(n)})})}async createMicrophoneTrack(t=!0){return new Promise(async e=>{const s=new AudioContext,i=await navigator.mediaDevices.getUserMedia({audio:t,video:!1}),n=new g(i,s,m.MICROPHONE);e(n)})}}c.Track=g,c.Yami=q,Object.defineProperties(c,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
